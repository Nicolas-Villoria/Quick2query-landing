---
// Hero section component
---

<section id="hero" class="relative min-h-screen flex items-center justify-center overflow-hidden bg-gradient-to-br from-gray-50 to-white">
  <!-- Code Pattern Background Animation -->
  <div class="absolute inset-0 flex items-center justify-center opacity-20">
    <div class="code-pattern">
      <div class="grid grid-cols-12 gap-4">
        {Array(24).fill(0).map(() => (
          <div class="h-2 bg-tech rounded-full transform transition-all duration-500"></div>
        ))}
      </div>
    </div>
  </div>

  <div class="container mx-auto px-6 py-20 relative z-10">
    <div class="grid lg:grid-cols-2 gap-12 items-center">
      <!-- Left Content -->
      <div class="text-center lg:text-left">
        <h1 class="text-5xl lg:text-6xl font-bold text-indigo-950 mb-6 leading-tight font-primary">
          From Natural Language
          <span class="bg-gradient-to-r from-tech to-primary bg-clip-text text-transparent">
            to SQL with AI
          </span>
        </h1>
        <p class="text-xl text-gray-600 mb-8 leading-relaxed font-secondary">
          Powerful API that transforms natural language into precise SQL queries, enabling seamless data access without technical expertise.
        </p>
        
        <!-- Pill CTA Buttons -->
        <div class="flex flex-col sm:flex-row gap-4 justify-center lg:justify-start items-center">
          <button class="pill-button blue-pill group">
            <span class="pill-content">
              <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
              </svg>
              Start Free Trial
            </span>
          </button>
          <button class="pill-button red-pill group">
            <span class="pill-content">
              <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
              </svg>
              Watch Demo
            </span>
          </button>
        </div>
      </div>

      <!-- Right Content - Video Demo -->
      <div class="flex justify-center lg:justify-end">
        <div class="relative bg-white rounded-2xl shadow-2xl overflow-hidden border-2 border-tech/20 w-full max-w-xl">
          <!-- Browser-like header -->
          <div class="bg-tech/5 p-4 flex items-center border-b-2 border-tech/20">
            <div class="flex space-x-2 mr-4">
              <div class="w-3 h-3 rounded-full bg-red-500"></div>
              <div class="w-3 h-3 rounded-full bg-yellow-500"></div>
              <div class="w-3 h-3 rounded-full bg-green-500"></div>
            </div>
            <div class="flex-1 bg-white rounded-full h-8 flex items-center px-4 text-sm text-gray-500 border border-tech/20 font-mono">
              demo.quick2query.com
            </div>
          </div>
          
          <!-- Video container with gradient overlay -->
          <div class="relative aspect-video bg-neutral group cursor-pointer" id="video-container">
            <video 
              class="w-full h-full object-cover"
              autoplay
              loop
              muted
              playsinline
              id="demo-video"
            >
              <source src="/prototype_v2.mp4" type="video/mp4">
              Your browser does not support the video tag.
            </video>
            <!-- Gradient overlay -->
            <div class="absolute inset-0 bg-gradient-to-t from-tech/10 to-transparent pointer-events-none"></div>
            <!-- Expand button -->
            <button 
              class="absolute top-4 right-4 p-2 bg-white/90 backdrop-blur-sm rounded-lg shadow-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 hover:bg-white"
              id="expand-video"
              title="View full screen"
            >
              <svg class="w-5 h-5 text-tech" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8V4m0 0h4M4 4l5 5m11-5h-4m4 0v4m0 0l-5-5m-7 11h4m-4 0v4m0 0l5-5m5 5v-4m0 4h-4m0 0l5-5"></path>
              </svg>
            </button>
          </div>
          
          <!-- Interactive elements below video -->
          <div class="p-4 bg-white border-t border-tech/20">
            <div class="flex items-center justify-between">
              <div class="flex items-center space-x-2">
                <div class="w-2 h-2 bg-green-500 rounded-full animate-pulse"></div>
                <span class="text-sm text-gray-600 font-secondary">Live Preview</span>
              </div>
              <span class="text-xs text-tech font-mono">v2.0.0</span>
            </div>
          </div>
        </div>
      </div>

      <!-- Full screen modal -->
      <div 
        id="video-modal" 
        class="fixed inset-0 bg-black/90 z-50 hidden items-center justify-center p-4 md:p-8"
        style="backdrop-filter: blur(8px);"
      >
        <div class="relative w-full max-w-5xl mx-auto bg-white rounded-2xl overflow-hidden shadow-2xl">
          <!-- Modal header -->
          <div class="bg-tech/5 p-4 flex items-center justify-between border-b-2 border-tech/20">
            <div class="flex items-center space-x-4">
              <div class="flex space-x-2">
                <div class="w-3 h-3 rounded-full bg-red-500"></div>
                <div class="w-3 h-3 rounded-full bg-yellow-500"></div>
                <div class="w-3 h-3 rounded-full bg-green-500"></div>
              </div>
              <span class="text-sm text-gray-600 font-mono">Quick2query Demo</span>
            </div>
            <button 
              id="close-modal"
              class="p-2 hover:bg-tech/10 rounded-lg transition-colors duration-200"
              title="Close"
            >
              <svg class="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>
          
          <!-- Modal video -->
          <div class="aspect-video bg-neutral relative">
            <video 
              class="w-full h-full object-cover"
              autoplay
              loop
              muted
              playsinline
              id="modal-video"
            >
              <source src="/prototype_v2.mp4" type="video/mp4">
              Your browser does not support the video tag.
            </video>
            <!-- Video controls -->
            <div class="absolute bottom-0 inset-x-0 p-4 bg-gradient-to-t from-black/50 to-transparent">
              <div class="flex items-center justify-between text-white">
                <button id="play-pause" class="p-2 hover:bg-white/20 rounded-lg transition-colors">
                  <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z"></path>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                </button>
                <button id="toggle-sound" class="p-2 hover:bg-white/20 rounded-lg transition-colors">
                  <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.536 8.464a5 5 0 010 7.072M12 8v8m-4.536-.464a5 5 0 010-7.072"></path>
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const videoContainer = document.getElementById('video-container');
    const expandButton = document.getElementById('expand-video');
    const modal = document.getElementById('video-modal');
    const closeModal = document.getElementById('close-modal');
    const demoVideo = document.getElementById('demo-video') as HTMLVideoElement;
    const modalVideo = document.getElementById('modal-video') as HTMLVideoElement;
    const playPauseBtn = document.getElementById('play-pause');
    const toggleSoundBtn = document.getElementById('toggle-sound');
    
    // Function to sync video states
    const syncVideos = () => {
      modalVideo.currentTime = demoVideo.currentTime;
    };

    // Open modal
    expandButton?.addEventListener('click', () => {
      modal?.classList.remove('hidden');
      modal?.classList.add('flex');
      document.body.style.overflow = 'hidden';
      syncVideos();
    });

    // Close modal
    closeModal?.addEventListener('click', () => {
      modal?.classList.add('hidden');
      modal?.classList.remove('flex');
      document.body.style.overflow = '';
    });

    // Close on escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && !modal?.classList.contains('hidden')) {
        modal?.classList.add('hidden');
        modal?.classList.remove('flex');
        document.body.style.overflow = '';
      }
    });

    // Play/Pause toggle
    playPauseBtn?.addEventListener('click', () => {
      if (modalVideo.paused) {
        modalVideo.play();
        demoVideo.play();
        playPauseBtn.innerHTML = `
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
        `;
      } else {
        modalVideo.pause();
        demoVideo.pause();
        playPauseBtn.innerHTML = `
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z"></path>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
        `;
      }
    });

    // Sound toggle
    let isMuted = true;
    toggleSoundBtn?.addEventListener('click', () => {
      isMuted = !isMuted;
      modalVideo.muted = isMuted;
      demoVideo.muted = isMuted;
      toggleSoundBtn.innerHTML = isMuted ? `
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.536 8.464a5 5 0 010 7.072M12 8v8m-4.536-.464a5 5 0 010-7.072"></path>
        </svg>
      ` : `
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.536 8.464a5 5 0 010 7.072M18.364 5.636a9 9 0 010 12.728M12 8v8m-4.536-.464a5 5 0 010-7.072"></path>
        </svg>
      `;
    });

    // Click outside to close
    modal?.addEventListener('click', (e) => {
      if (e.target === modal) {
        modal.classList.add('hidden');
        modal.classList.remove('flex');
        document.body.style.overflow = '';
      }
    });
  });
</script>
